#!/bin/bash
# dmenu access to lolimpd

# lolimpd binary name
LOLIMPD="lolimpd"

# dmenu with imlib support available?
HAS_IMLIB_DMENU=1

# cache file
CACHE="/tmp/lolimpdnu.cache"

# removes the cache file after song was selected
# set this to 1, if you use multiple playlists.
# if the playlists are big though, lolimpdnu will be slow.
NOCACHE=0

# read user options
[[ -f "$HOME/.dmenurc" ]] && {
   . "$HOME/.dmenurc"
   DMENU="$LOLIMPDNU_DMENU"
}
[[ -n "$DMENU" ]] || {
   DMENU="dmenu -i -l 5"
}

# lolis live here
main() {
   local song=
   local g=
   local index=
   local filter=

   # options
   [[ "$1" == "-c" ]] && { rm "$CACHE"; shift 1; }
   [[ "$1" == "-g" ]] && { g="-g"; shift 1; }
   [[ "$1" == "-h" ]] && {
      echo "usage: lolimpdnu [cgh] <filter>"
      echo -e "\t-c\tClear song list cache. Use this, if you add/remove songs from/to mpd."
      echo -e "\t-g\tGenerate tumbnail cache for all songs. (Needs dmenu with imlib support)"
      echo -e "\t-h\tShow this help."
      return;
   }

   # filter output
   # useful when your IME keybindings are blocked by dmenu
   filter="$@"

   # generate cache, if one doesn't exist
   [[ $HAS_IMLIB_DMENU -eq 1 ]] && {
     [[ -f "$CACHE" ]] || "$LOLIMPD" ls --with-cover > "$CACHE"
   }
   [[ $HAS_IMLIB_DMENU -eq 0 ]] && {
     [[ -f "$CACHE" ]] || "$LOLIMPD" ls > "$CACHE"
   }

   # imlib specific
   [[ $HAS_IMLIB_DMENU -eq 1 ]] && {
      # search for current song
      [[ -n "$filter" ]] && {
         index=$(grep "$filter" "$CACHE" | grep -Fon "$("$LOLIMPD")" | cut -f1 -d: | head -n1)
      }
      [[ -n "$filter" ]] || {
         index=$("$LOLIMPD" index)
      }
      [[ -n "$index" ]] || index=1

      # select song with dmenu, starting from currently playing song
      [[ -n "$filter" ]] && song="$(grep "$filter" "$CACHE" | $DMENU $g -si $index -p "lolimpd")"
      [[ -n "$filter" ]] || song="$(cat "$CACHE" | $DMENU $g -si $index -p "lolimpd")"
   }

   # default dmenu
   [[ $HAS_IMLIB_DMENU -eq 0 ]] && {
      [[ -n "$filter" ]] && song="$(grep "$filter" "$CACHE" | $DMENU -p "lolimpd")"
      [[ -n "$filter" ]] || song="$(cat "$CACHE" | $DMENU -p "lolimpd")"
   }

   # remove cache if asked
   [[ $NOCACHE -eq 0 ]] || rm "$CACHE"

   # play song if selected
   [[ -n "$song" ]] || return
   "$LOLIMPD" play "$song"
}
main "$@"
